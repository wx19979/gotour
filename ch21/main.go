// Go语言中,所有的定义比如函数、变量、结构体等如果首字母是大写,那么就可以被其他包使用
// 反之如果首字母是小写的,就只能在同一个包内使用
// init,通过它可以实现包级别的一些初始化操作,在导入一个包时可以对这个包做一些必要的初始化操作
// 比如数据库连接和一些数据的检查,确保能正确使用这个包
// go mod tidy 用于添加缺失的模块,移除不再需要的模块
// 包是同一目录中,编译在一起的源文件集合
// 模块又是相关的包的集合,它里面包含了很多实现该模块的包
package main

import (
	"fmt"
	"os"
)

const name = "飞雪无情"

func main() {
	//调用创建一个文件夹的函数
	os.Mkdir("tmp", 0666)

	fmt.Println("飞雪无情")
	//创建一个map对象
	m := map[int]string{}
	s := "飞雪无情"
	m[0] = s
}

// 用于创建一个字符串的函数
func newString() string {
	s := new(string)
	*s = "飞雪无情"
	return *s
}
